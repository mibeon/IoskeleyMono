name: Build and Release Font

on:
  push:
    branches: ["main"]
    paths:
      - "private-build-plans.toml"
      - ".github/workflows/**"
  workflow_dispatch:

permissions:
  contents: write   # f端r Releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout Iosevka source
        uses: actions/checkout@v4
        with:
          repository: be5invis/Iosevka
          path: iosevka-src
          fetch-depth: 1

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ttfautohint python3 zip

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Copy custom build plan
        run: cp private-build-plans.toml iosevka-src/

      - name: Install dependencies and build
        working-directory: iosevka-src
        run: |
          npm install
          # baue NUR deinen Plan (Name ggf. anpassen!)
          npm run build -- contents::IoskeleyMono

      # --- WICHTIG: nicht auf feste Ordnernamen verlassen ---
      - name: Package fonts (zip TTF & WOFF2 found in dist)
        run: |
          set -euo pipefail
          mkdir -p out

          echo "Dist tree:"
          find iosevka-src/dist -maxdepth 3 -type d -print || true

          # TTF b端ndeln
          if find iosevka-src/dist -type f -name '*.ttf' | grep -q .; then
            find iosevka-src/dist -type f -name '*.ttf' -print0 \
              | xargs -0 zip -j out/IoskeleyMono-TTF.zip
          else
            echo "Keine TTF-Dateien gefunden"; exit 1
          fi

          # WOFF2 b端ndeln (optional, wenn vorhanden)
          if find iosevka-src/dist -type f -name '*.woff2' | grep -q .; then
            find iosevka-src/dist -type f -name '*.woff2' -print0 \
              | xargs -0 zip -j out/IoskeleyMono-Web.zip
          else
            echo "Keine WOFF2-Dateien gefunden (ok, wenn nur Desktop-Fonts gew端nscht)"
          fi

          ls -la out

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fonts-${{ github.run_number }}
          path: out/*.zip
          if-no-files-found: error

      - name: Set Release Version
        id: vars
        run: echo "tag=$(date +'%Y.%m.%d')-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: "Release ${{ steps.vars.outputs.tag }}"
          body: |
            Automated build from ${{ github.sha }}.
            Assets: IoskeleyMono-TTF.zip, IoskeleyMono-Web.zip (falls vorhanden)
          files: out/*.zip
