name: Build and Release Font

on:
  push:
    branches: ["main"]
    paths:
      - "private-build-plans.toml"
      - ".github/workflows/**"
  workflow_dispatch:

permissions:
  contents: write   # für Releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout Iosevka source
        uses: actions/checkout@v4
        with:
          repository: be5invis/Iosevka
          path: iosevka-src
          fetch-depth: 1

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ttfautohint python3 zip

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Copy custom build plan
        run: cp private-build-plans.toml iosevka-src/

      - name: Install deps & build your plan
        working-directory: iosevka-src
        run: |
          npm install
          # >>> HIER Plan-Key prüfen! (z.B. IoskeleyMono)
          npm run build -- contents::IoskeleyMono

      # --- Debug-Ausgabe: zeig mir, WAS tatsächlich gebaut wurde
      - name: Show dist tree
        run: |
          if [ ! -d "iosevka-src/dist" ]; then
            echo "dist/ existiert nicht -> Build ist fehlgeschlagen"; exit 1
          fi
          find iosevka-src/dist -maxdepth 3 -type d -print
          find iosevka-src/dist -type f | head -n 50

      # --- Minimal-sicher: ganzen dist/ Ordner als Artifact hochladen
      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.run_number }}
          path: iosevka-src/dist/**
          if-no-files-found: error
          retention-days: 14

      # --- Optional: ein einziges ZIP fürs Release (ohne fragile Globs)
      - name: Pack single zip for release
        run: |
          mkdir -p out
          (cd iosevka-src && zip -r ../out/IoskeleyMono-dist.zip dist)
          ls -la out

      - name: Set Release Version
        id: vars
        run: echo "tag=$(date +'%Y.%m.%d')-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: "Release ${{ steps.vars.outputs.tag }}"
          body: |
            Automated build from ${{ github.sha }}.
            Enthält den kompletten dist/ Baum (TTF/WOFF2/…).
          files: out/IoskeleyMono-dist.zip
